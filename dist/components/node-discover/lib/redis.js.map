{"version":3,"sources":["../../../../src/components/node-discover/lib/redis.js"],"names":["redis","require","EventEmitter","util","Socket","opts","call","return_buffers","inherits","prototype","bind","port","address","callback","sub","createClient","pub","that","on","channel","message","emit","subscribe","setBroadcast","addMembership","setMulticastTTL","close","unsubscribe","quit","send","msg","offset","length","publish","toString","createSocket","module","exports"],"mappings":";;;;AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,YAAvC;;AACA,MAAMC,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEA,SAASG,MAAT,CAAgBC,IAAhB,EAAsB;AAClBH,EAAAA,YAAY,CAACI,IAAb,CAAkB,IAAlB;AAEA,OAAKD,IAAL,GAAYA,IAAI,IAAI,EAApB;AACA,OAAKA,IAAL,CAAUE,cAAV,GAA2B,IAA3B;AACH;;AACDJ,IAAI,CAACK,QAAL,CAAcJ,MAAd,EAAsBF,YAAtB;;AAEAE,MAAM,CAACK,SAAP,CAAiBC,IAAjB,GAAwB,UAASC,IAAT,EAAeC,OAAf,EAAwBC,QAAxB,EAAkC;AACtD,OAAKC,GAAL,GAAWd,KAAK,CAACe,YAAN,CAAmB,KAAKV,IAAxB,CAAX;AACA,OAAKW,GAAL,GAAWhB,KAAK,CAACe,YAAN,CAAmB,KAAKV,IAAxB,CAAX;AAEA,QAAMY,IAAI,GAAG,IAAb;AAEA,OAAKH,GAAL,CAASI,EAAT,CAAY,SAAZ,EAAuB,UAASC,OAAT,EAAkBC,OAAlB,EAA2B;AAC9C,QAAID,OAAO,IAAI,MAAf,EAAuB;AAEvBF,IAAAA,IAAI,CAACI,IAAL,CAAU,SAAV,EAAqBD,OAArB,EAA8B;AAAER,MAAAA,OAAO,EAAE,SAAX;AAAsBD,MAAAA,IAAI,EAAEA;AAA5B,KAA9B;AACH,GAJD;AAMA,OAAKG,GAAL,CAASQ,SAAT,CAAmB,MAAnB;AAEA,OAAKN,GAAL,CAASE,EAAT,CAAY,OAAZ,EAAqB,MAAM;AACvBL,IAAAA,QAAQ;AACR,SAAKQ,IAAL,CAAU,WAAV;AACH,GAHD;AAIH,CAlBD;;AAoBAjB,MAAM,CAACK,SAAP,CAAiBc,YAAjB,GAAgC,YAAW,CAAE,CAA7C;;AAEAnB,MAAM,CAACK,SAAP,CAAiBe,aAAjB,GAAiC,YAAW,CAAE,CAA9C;;AAEApB,MAAM,CAACK,SAAP,CAAiBgB,eAAjB,GAAmC,YAAW,CAAE,CAAhD;;AAEArB,MAAM,CAACK,SAAP,CAAiBiB,KAAjB,GAAyB,YAAW;AAChC,OAAKZ,GAAL,CAASa,WAAT;AACA,OAAKb,GAAL,CAASc,IAAT;AACA,OAAKZ,GAAL,CAASY,IAAT;AACH,CAJD;;AAMAxB,MAAM,CAACK,SAAP,CAAiBoB,IAAjB,GAAwB,UAASC,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8BrB,IAA9B,EAAoCC,OAApC,EAA6C;AACjE,OAAKI,GAAL,CAASiB,OAAT,CAAiB,MAAjB,EAAyBH,GAAG,CAACI,QAAJ,EAAzB;AACH,CAFD;;AAIA,SAASC,YAAT,CAAsB9B,IAAtB,EAA4B;AACxB,SAAO,IAAID,MAAJ,CAAWC,IAAX,CAAP;AACH;;AAED+B,MAAM,CAACC,OAAP,GAAiB;AACbF,EAAAA,YAAY,EAAEA;AADD,CAAjB","sourcesContent":["const redis = require('redis');\nconst EventEmitter = require('events').EventEmitter;\nconst util = require('util');\n\nfunction Socket(opts) {\n    EventEmitter.call(this);\n\n    this.opts = opts || {};\n    this.opts.return_buffers = true;\n}\nutil.inherits(Socket, EventEmitter);\n\nSocket.prototype.bind = function(port, address, callback) {\n    this.sub = redis.createClient(this.opts);\n    this.pub = redis.createClient(this.opts);\n\n    const that = this;\n\n    this.sub.on('message', function(channel, message) {\n        if (channel != 'cote') return;\n\n        that.emit('message', message, { address: '0.0.0.0', port: port });\n    });\n\n    this.sub.subscribe('cote');\n\n    this.pub.on('ready', () => {\n        callback();\n        this.emit('listening');\n    });\n};\n\nSocket.prototype.setBroadcast = function() {};\n\nSocket.prototype.addMembership = function() {};\n\nSocket.prototype.setMulticastTTL = function() {};\n\nSocket.prototype.close = function() {\n    this.sub.unsubscribe();\n    this.sub.quit();\n    this.pub.quit();\n};\n\nSocket.prototype.send = function(msg, offset, length, port, address) {\n    this.pub.publish('cote', msg.toString());\n};\n\nfunction createSocket(opts) {\n    return new Socket(opts);\n}\n\nmodule.exports = {\n    createSocket: createSocket,\n};\n"],"file":"redis.js"}