{"version":3,"sources":["../../../../src/components/node-discover/lib/discover.js"],"names":["Network","require","EventEmitter","util","module","exports","Discover","weight","Date","now","Math","pow","String","length","options","callback","call","self","running","settings","helloInterval","checkInterval","nodeTimeout","masterTimeout","address","port","broadcast","multicast","multicastTTL","unicast","key","mastersRequired","client","server","reuseAddr","ignoreProcess","ignoreInstance","redis","mqtt","ignore","Error","me","advertisement","nodes","channels","sources","evaluateHello","id","data","obj","rinfo","mqtthostid","iid","instanceUuid","hostName","isNew","node","Object","getOwnPropertyNames","forEach","emit","on","hostname","processUuid","count","i","error","start","err","hello","stop","inherits","prototype","promote","demote","permanent","send","advertise","eachNode","fn","uuid","join","channel","leave"],"mappings":"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","sourcesContent":["/*\n *\n * Node Discover\n *\n * Attributes\n *   Nodes\n *\n * Methods\n *   Promote\n *   Demote\n *   Join\n *   Leave\n *   Advertise\n *   Send\n *   Start\n *   Stop\n *   EachNode(fn)\n *\n * Events\n *   Promotion\n *   Demotion\n *   Added\n *   Removed\n *   Master\n *\n *\n * checkInterval should be greater than hello interval or you're just wasting cpu\n * nodeTimeout must be greater than checkInterval\n * masterTimeout must be greater than nodeTimeout\n *\n */\n\nconst Network = require('./network.js');\nconst EventEmitter = require('events').EventEmitter;\nconst util = require('util');\n\n// var reservedEvents = ['promotion', 'demotion', 'added', 'removed', 'master', 'hello'];\n\nmodule.exports = Discover;\n\n/*\n * This is the default automatically assigned weight function in the case that\n * you do not specify a weight, this function will be called. You can override\n * this function if you want to change the default behavior.\n *\n * Example:\n *\n * ```js\n * var Discover = require('discover');\n * Discover.weight = function () {\n *     return Math.random();\n * }\n *\n * var d = new Discover();\n * ```\n */\nDiscover.weight = function() {\n    // default to negative, decimal now value\n    return -(Date.now() / Math.pow(10, String(Date.now()).length));\n};\n\nfunction Discover(options, callback) {\n    if (!(this instanceof Discover)) {\n        return new Discover(options, callback);\n    }\n\n    EventEmitter.call(this);\n\n    if (typeof options === 'function') {\n        callback = options;\n        options = null;\n    }\n\n    const self = this;\n    /* checkId, helloId,*/ let running = false;\n    var options = options || {};\n\n    const settings = (self.settings = {\n        helloInterval: options.helloInterval || 1000,\n        checkInterval: options.checkInterval || 2000,\n        nodeTimeout: options.nodeTimeout || 2000,\n        masterTimeout: options.masterTimeout || 2000,\n        address: options.address || '0.0.0.0',\n        port: options.port || 12345,\n        broadcast: options.broadcast || null,\n        multicast: options.multicast || null,\n        multicastTTL: options.multicastTTL || null,\n        unicast: options.unicast || null,\n        key: options.key || null,\n        mastersRequired: options.mastersRequired || 1,\n        weight: options.weight || Discover.weight(),\n        client: options.client || (!options.client && !options.server),\n        server: options.server || (!options.client && !options.server),\n        reuseAddr: options.reuseAddr, // default is set at the network layer (true)\n        ignoreProcess: options.ignoreProcess === false ? false : true,\n        ignoreInstance: options.ignoreInstance === false ? false : true,\n        redis: options.redis || null,\n        mqtt: options.mqtt || null,\n    });\n\n    // this is for backwards compatibilty with v0.1.0\n    // TODO: should be removed in the next major release\n    if (options.ignore === false) {\n        settings.ignoreProcess = false;\n        settings.ignoreInstance = false;\n    }\n\n    if (!(settings.nodeTimeout >= settings.checkInterval)) {\n        throw new Error('nodeTimeout must be greater than or equal to checkInterval.');\n    }\n\n    if (!(settings.masterTimeout >= settings.nodeTimeout)) {\n        throw new Error('masterTimeout must be greater than or equal to nodeTimeout.');\n    }\n\n    self.broadcast = new Network({\n        address: settings.address,\n        port: settings.port,\n        broadcast: settings.broadcast,\n        multicast: settings.multicast,\n        multicastTTL: settings.multicastTTL,\n        unicast: settings.unicast,\n        key: settings.key,\n        reuseAddr: settings.reuseAddr,\n        ignoreProcess: settings.ignoreProcess,\n        ignoreInstance: settings.ignoreInstance,\n        redis: settings.redis,\n        mqtt: settings.mqtt,\n    });\n\n    // This is the object that gets broadcast with each hello packet.\n    self.me = {\n        // isMaster     : false,\n        // isMasterEligible: false, //self.settings.server, //Only master eligible by default if we are a server\n        weight: settings.weight,\n        // address     : '127.0.0.1', //TODO: get the real local address?\n        advertisement: options.advertisement,\n    };\n\n    self.nodes = {};\n    self.channels = [];\n    self.sources = {};\n\n    /*\n     * When receiving hello messages we need things to happen in the following order:\n     *     - make sure the node is in the node list\n     *     - if hello is from new node, emit added\n     *     - if hello is from new master and we are master, demote\n     *     - if hello is from new master emit master\n     *\n     * need to be careful not to over-write the old node object before we have information\n     * about the old instance to determine if node was previously a master.\n     */\n    self.evaluateHello = function(id, data, obj, rinfo, mqtthostid) {\n        // prevent processing hello message from self\n        if (obj.iid === self.broadcast.instanceUuid) {\n            return;\n        }\n\n        // data.lastSeen = +new Date();\n        // data.address = rinfo.address;\n        data.hostName = id; // obj.hostName;\n        data.port = rinfo.port;\n        data.id = obj.iid;\n        const isNew = !self.nodes[obj.iid];\n        if (typeof self.sources[id] == 'undefined') {\n            self.sources[id] = {};\n        }\n        self.sources[id][mqtthostid] = 1;\n        // console.log('Adding',id,'- source ',mqtthostid);\n        // var wasMaster = null;\n\n        // if (!isNew) {\n        //    wasMaster = !!self.nodes[obj.iid].isMaster;\n        // }\n\n        const node = (self.nodes[obj.iid] = self.nodes[obj.iid] || {});\n\n        Object.getOwnPropertyNames(data).forEach(function(key) {\n            node[key] = data[key];\n        });\n\n        if (isNew) {\n            // new node found\n\n            self.emit('added', node, obj, rinfo);\n        }\n\n        self.emit('helloReceived', node);\n\n        /* if (node.isMaster) {\n            //if we have this node and it was not previously a master then it is a new master node\n            if ((isNew || !wasMaster )) {\n                //this is a new master\n\n                //count up how many masters we have now\n                //initialze to 1 if we are a master\n                var masterCount = (self.me.isMaster) ? 1 : 0;\n                for (var uuid in self.nodes) {\n                    if (self.nodes[uuid].isMaster) {\n                        masterCount++;\n                    }\n                }\n\n                if (self.me.isMaster && masterCount > settings.mastersRequired) {\n                    self.demote();\n                }\n\n                self.emit(\"master\", node, obj, rinfo);\n            }\n        }*/\n    };\n\n    self.broadcast.on('node_left', function(hostname, mqtthostid) {\n        for (const processUuid in self.nodes) {\n            node = self.nodes[processUuid];\n\n            if (node.hostName === hostname) {\n                if (typeof self.sources[hostname] !== 'undefined') {\n                    delete self.sources[hostname][mqtthostid];\n                    // console.log('Removing',hostname,'from source',mqtthostid);\n                    //                    console.log(self.sources[hostname]);\n                    let count = 0;\n                    for (i in self.sources[hostname]) {\n                        count++;\n                    }\n                    if (count == 0) {\n                        delete self.sources[hostname];\n                        // console.log('Clearing ',hostname,'- no source');\n                    }\n                }\n\n                if (typeof self.sources[hostname] === 'undefined') {\n                    delete self.nodes[processUuid];\n                    self.emit('removed', node);\n                }\n            }\n        }\n    });\n\n    self.broadcast.on('hello', self.evaluateHello);\n\n    self.broadcast.on('error', function(error) {\n        self.emit('error', error);\n    });\n\n    self.broadcast.on('mqtthostdisconnected', function(mqtthostid) {\n        // console.log('lost mqtthost',mqtthostid);\n        for (const processUuid in self.nodes) {\n            node = self.nodes[processUuid];\n\n            hostname = node.hostName;\n            // console.log(' in peer',hostname,' ?');\n\n            if (typeof self.sources[hostname] !== 'undefined') {\n                if (typeof self.sources[hostname][mqtthostid] != 'undefined') {\n                    delete self.sources[hostname][mqtthostid];\n\n                    let count = 0;\n                    for (i in self.sources[hostname]) {\n                        count++;\n                    }\n                    if (count == 0) {\n                        delete self.sources[hostname];\n                    }\n                }\n            }\n            if (typeof self.sources[hostname] === 'undefined') {\n                delete self.nodes[processUuid];\n                self.emit('removed', node);\n            }\n        }\n    });\n\n    self.start = function(callback) {\n        if (running) {\n            callback && callback(null, false);\n\n            return false;\n        }\n\n        self.broadcast.start(function(err) {\n            if (err) {\n                return callback && callback(err, false);\n            }\n\n            running = true;\n\n            // checkId = setInterval(self.check, checkInterval());\n\n            if (self.settings.server) {\n                // send hello every helloInterval\n                // helloId = setInterval(function () {\n                //    self.hello();\n                // }, helloInterval());\n                self.hello();\n            }\n\n            return callback && callback(null, true);\n        });\n    };\n\n    self.stop = function() {\n        if (!running) {\n            return false;\n        }\n\n        self.broadcast.stop();\n\n        // clearInterval(checkId);\n        // clearInterval(helloId);\n\n        running = false;\n    };\n\n    self.start(callback);\n\n    /* function helloInterval () {\n        if (typeof settings.helloInterval === 'function') {\n            return settings.helloInterval.call(self);\n        }\n        //else\n        return settings.helloInterval;\n    }*/\n\n    /* function checkInterval () {\n        if (typeof settings.checkInterval === 'function') {\n            return settings.checkInterval.call(self);\n        }\n        //else\n        return settings.checkInterval;\n    }*/\n}\n\nutil.inherits(Discover, EventEmitter);\n\nDiscover.prototype.promote = function() {\n    /* var self = this;\n\n    self.me.isMasterEligible = true;\n    self.me.isMaster = true;\n    self.emit(\"promotion\", self.me);\n    self.hello();*/\n};\n\nDiscover.prototype.demote = function(permanent) {\n    /* var self = this;\n\n    self.me.isMasterEligible = !permanent;\n    self.me.isMaster = false;\n    self.emit(\"demotion\", self.me);\n    self.hello();*/\n};\n\nDiscover.prototype.hello = function() {\n    const self = this;\n    self.broadcast.send('hello', self.me);\n    self.emit('helloEmitted');\n};\n\nDiscover.prototype.advertise = function(obj) {\n    const self = this;\n\n    self.me.advertisement = obj;\n};\n\nDiscover.prototype.eachNode = function(fn) {\n    const self = this;\n\n    for (const uuid in self.nodes) {\n        fn(self.nodes[uuid]);\n    }\n};\n\nDiscover.prototype.join = function(channel, fn) {\n    /* var self = this;\n\n    if (~reservedEvents.indexOf(channel)) {\n        return false;\n    }\n\n    if (~self.channels.indexOf(channel)) {\n        return false;\n    }\n\n    if (fn) {\n        self.on(channel, fn);\n    }\n\n    self.broadcast.on(channel, function (data, obj, rinfo) {\n        self.emit(channel, data, obj, rinfo);\n    });\n\n    self.channels.push(channel);\n    */\n    return true;\n};\n\nDiscover.prototype.leave = function(channel) {\n    /* var self = this;\n\n    self.broadcast.removeAllListeners(channel);\n\n    delete self.channels[self.channels.indexOf(channel)];\n    */\n    return true;\n};\n\nDiscover.prototype.send = function(channel, obj) {\n    /* var self = this;\n\n    if (~reservedEvents.indexOf(channel)) {\n        return false;\n    }\n\n    self.broadcast.send(channel, obj);\n    */\n    return true;\n};\n"],"file":"discover.js"}