{"version":3,"sources":["../../../../src/components/node-discover/lib/network.js"],"names":["dgram","require","redis","mqtt","crypto","os","EventEmitter","util","uuid","nodeVersion","process","version","replace","split","map","t","parseInt","procUuid","hostName","env","DISCOVERY_HOSTNAME","hostname","module","exports","Network","options","callback","call","self","address","port","broadcast","multicast","multicastTTL","unicast","key","reuseAddr","ignoreProcess","ignoreInstance","instanceUuid","processUuid","socket","createSocket","type","on","mqtthostid","emit","id","data","rinfo","decode","err","obj","node_left","iid","event","inherits","prototype","getInstanceUuid","getProcessUuid","start","bind","indexOf","destination","concat","setBroadcast","addMembership","setMulticastTTL","e","stop","close","send","arguments","length","encode","contents","msg","Buffer","forEach","tmp","encrypt","JSON","stringify","parse","decrypt","toString","str","buf","cipher","createCipher","push","update","final","join","decipher","createDecipher"],"mappings":"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","sourcesContent":["const dgram = require('dgram');\nconst redis = require('./redis');\nconst mqtt = require('./mqtt');\nconst crypto = require('crypto');\nconst os = require('os');\nconst EventEmitter = require('events').EventEmitter;\nconst util = require('util');\nconst uuid = require('uuid/v4');\nconst nodeVersion = process.version\n    .replace('v', '')\n    .split(/\\./gi)\n    .map(function(t) {\n        return parseInt(t, 10);\n    });\n\nconst procUuid = uuid();\nconst hostName = process.env.DISCOVERY_HOSTNAME || os.hostname();\n\nmodule.exports = Network;\n\nfunction Network(options) {\n    if (!(this instanceof Network)) {\n        return new Network(options, callback);\n    }\n\n    EventEmitter.call(this);\n\n    const self = this;\n    var options = options || {};\n\n    self.address = options.address || '0.0.0.0';\n    self.port = options.port || 12345;\n    self.broadcast = options.broadcast || null;\n    self.multicast = options.multicast || null;\n    self.multicastTTL = options.multicastTTL || 1;\n    self.unicast = options.unicast || null;\n    self.key = options.key || null;\n    self.reuseAddr = options.reuseAddr === false ? false : true;\n    self.ignoreProcess = options.ignoreProcess === false ? false : true;\n    self.ignoreInstance = options.ignoreInstance === false ? false : true;\n    self.redis = options.redis;\n    self.mqtt = options.mqtt;\n    self.hostName = options.hostname || hostName;\n\n    self.instanceUuid = uuid();\n    self.processUuid = procUuid;\n\n    if (self.mqtt) {\n        self.socket = mqtt.createSocket(self.mqtt, this);\n    } else if (self.redis) {\n        self.socket = redis.createSocket(self.redis);\n    } else if (nodeVersion[0] === 0 && nodeVersion[1] < 12) {\n        // node v0.10 does not support passing an object to dgram.createSocket\n        // not sure if v0.11 does, but assuming it does not.\n        self.socket = dgram.createSocket('udp4');\n    } else {\n        self.socket = dgram.createSocket({ type: 'udp4', reuseAddr: self.reuseAddr });\n    }\n\n    self.socket.on('mqtthostdisconnected', function(mqtthostid) {\n        self.emit('mqtthostdisconnected', mqtthostid);\n    });\n\n    self.socket.on('message', function(id, data, rinfo, mqtthostid) {\n        self.decode(id, data, function(err, obj) {\n            if (err) {\n                // most decode errors are because we tried\n                // to decrypt a packet for which we do not\n                // have the key\n                // the only other possibility is that the\n                // message was split across packet boundaries\n                // and that is not handled\n                // self.emit(\"error\", err);\n            } else if (obj.node_left) {\n                self.emit('node_left', obj.node_left, mqtthostid);\n            } else if (obj.iid == self.instanceUuid && self.ignoreInstance) {\n            /* else if (obj.pid == procUuid && self.ignoreProcess && obj.iid !== self.instanceUuid) {\n                    return false;\n            }*/\n                return false;\n            } else if (obj.event && obj.data) {\n                self.emit(obj.event, id, obj.data, obj, rinfo, mqtthostid);\n            } else {\n                self.emit('message', id, obj, mqtthostid);\n            }\n        });\n    });\n\n    self.on('error', function(err) {\n        // TODO: Deal with this\n        /* console.log(\"Network error: \", err.stack);*/\n    });\n}\n\nutil.inherits(Network, EventEmitter);\n\nNetwork.prototype.getInstanceUuid = function() {\n    return this.instanceUuid;\n};\nNetwork.prototype.getProcessUuid = function() {\n    return this.processUuid;\n};\n\nNetwork.prototype.start = function(callback) {\n    const self = this;\n\n    self.socket.bind(self.port, self.address, function() {\n        if (self.unicast) {\n            if (typeof self.unicast === 'string' && ~self.unicast.indexOf(',')) {\n                self.unicast = self.unicast.split(',');\n            }\n\n            self.destination = [].concat(self.unicast);\n        } else if (self.redis || self.mqtt) {\n            self.destination = [true];\n        } else if (!self.multicast) {\n            // Default to using broadcast if multicast address is not specified.\n            self.socket.setBroadcast(true);\n\n            // TODO: get the default broadcast address from os.networkInterfaces() (not currently returned)\n            self.destination = [self.broadcast || '255.255.255.255'];\n        } else {\n            try {\n                // addMembership can throw if there are no interfaces available\n                self.socket.addMembership(self.multicast);\n                self.socket.setMulticastTTL(self.multicastTTL);\n            } catch (e) {\n                self.emit('error', e);\n\n                return callback && callback(e);\n            }\n\n            self.destination = [self.multicast];\n        }\n\n        return callback && callback();\n    });\n};\n\nNetwork.prototype.stop = function(callback) {\n    const self = this;\n\n    self.socket.close();\n\n    return callback && callback();\n};\n\nNetwork.prototype.send = function(event) {\n    const self = this;\n\n    const obj = {\n        event: event,\n        // pid : procUuid,\n        iid: self.instanceUuid,\n        // hostName : self.hostName\n    };\n\n    if (arguments.length == 2) {\n        obj.data = arguments[1];\n    } else {\n        // TODO: splice the arguments array and remove the first element\n        // setting data to the result array\n    }\n\n    self.encode(obj, function(err, contents) {\n        if (err) {\n            return false;\n        }\n\n        const msg = new Buffer(contents);\n\n        self.destination.forEach(function(destination) {\n            self.socket.send(msg, 0, msg.length, self.port, destination);\n        });\n    });\n};\n\nNetwork.prototype.encode = function(data, callback) {\n    const self = this;\n    let tmp;\n\n    try {\n        tmp = self.key ? encrypt(JSON.stringify(data), self.key) : JSON.stringify(data);\n    } catch (e) {\n        return callback(e, null);\n    }\n\n    return callback(null, tmp);\n};\n\nNetwork.prototype.decode = function(id, data, callback) {\n    const self = this;\n    let tmp;\n\n    if (data.length === 0) {\n        return callback(null, {\n            node_left: id,\n        });\n    }\n\n    try {\n        if (self.key) {\n            tmp = JSON.parse(decrypt(data.toString(), self.key));\n        } else {\n            tmp = JSON.parse(data);\n        }\n    } catch (e) {\n        return callback(e, null);\n    }\n\n    return callback(null, tmp);\n};\n\nfunction encrypt(str, key) {\n    const buf = [];\n    const cipher = crypto.createCipher('aes256', key);\n\n    buf.push(cipher.update(str, 'utf8', 'binary'));\n    buf.push(cipher.final('binary'));\n\n    return buf.join('');\n}\n\nfunction decrypt(str, key) {\n    const buf = [];\n    const decipher = crypto.createDecipher('aes256', key);\n\n    buf.push(decipher.update(str, 'binary', 'utf8'));\n    buf.push(decipher.final('utf8'));\n\n    return buf.join('');\n}\n"],"file":"network.js"}